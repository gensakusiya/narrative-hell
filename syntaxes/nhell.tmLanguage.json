{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Narrative Hell",
  "scopeName": "source.nhell",
  "patterns": [
    {
      "include": "#section-header"
    },
    {
      "include": "#beat-header"
    },
    {
      "include": "#beat-metadata"
    },
    {
      "include": "#metadata"
    },
    {
      "include": "#title"
    },
    {
      "include": "#choice"
    },
    {
      "include": "#effects"
    },
    {
      "include": "#flow-control"
    },
    {
      "include": "#dialogue"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "section-header": {
      "comment": "=== metadata === or === state ===",
      "patterns": [
        {
          "name": "entity.name.section.nhell",
          "match": "^(===)\\s+(metadata|state)\\s+(===)\\s*$",
          "captures": {
            "1": { "name": "punctuation.definition.section.begin.nhell" },
            "2": { "name": "keyword.control.section.nhell" },
            "3": { "name": "punctuation.definition.section.end.nhell" }
          }
        }
      ]
    },
    "beat-header": {
      "comment": "<<< beat_id >>>",
      "patterns": [
        {
          "name": "entity.name.function.beat.nhell",
          "match": "^(<<<)\\s+([\\w_]+)\\s+(>>>)\\s*$",
          "captures": {
            "1": { "name": "punctuation.definition.beat.begin.nhell" },
            "2": { "name": "entity.name.function.beat.nhell" },
            "3": { "name": "punctuation.definition.beat.end.nhell" }
          }
        }
      ]
    },
    "beat-metadata": {
      "comment": "@ key: value",
      "patterns": [
        {
          "name": "meta.beat-metadata.nhell",
          "match": "^(@)\\s+(\\w+):\\s*(.+)$",
          "captures": {
            "1": { "name": "punctuation.definition.metadata.nhell" },
            "2": { "name": "entity.other.attribute-name.nhell" },
            "3": { "name": "string.unquoted.nhell" }
          }
        }
      ]
    },
    "metadata": {
      "comment": "arc:, author:, etc in metadata section",
      "patterns": [
        {
          "name": "meta.metadata.nhell",
          "match": "^(\\w+):\\s*(.+)$",
          "captures": {
            "1": { "name": "keyword.other.metadata.nhell" },
            "2": { "name": "string.unquoted.metadata.nhell" }
          }
        }
      ]
    },
    "dialogue": {
      "comment": "Character: dialogue text (multiline)",
      "patterns": [
        {
          "name": "meta.dialogue.nhell",
          "begin": "^(\\w+):\\s*(.*)$",
          "end": "^(?!\\s{2,})",
          "beginCaptures": {
            "1": { "name": "entity.name.type.character.nhell" },
            "2": { "name": "string.unquoted.dialogue.nhell" }
          },
          "patterns": [
            {
              "name": "string.unquoted.dialogue.continuation.nhell",
              "match": "^\\s{2,}(.+)$",
              "captures": {
                "1": { "name": "string.unquoted.dialogue.nhell" }
              }
            }
          ]
        }
      ]
    },
    "transition": {
      "comment": "*[label] -> beat_id (optional)",
      "patterns": [
        {
          "name": "meta.transition.nhell",
          "begin": "^(\\*)\\s*(\\[)",
          "end": "(\\])",
          "beginCaptures": {
            "1": { "name": "keyword.control.transition.nhell" },
            "2": { "name": "punctuation.definition.transition.begin.nhell" }
          },
          "endCaptures": {
            "1": { "name": "punctuation.definition.transition.end.nhell" }
          },
          "contentName": "string.transition.text.nhell",
          "patterns": [
            {
              "name": "constant.character.escape.nhell",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "effects": {
      "comment": "~ variable value or ~ variable: value",
      "patterns": [
        {
          "name": "meta.effect.assignment.nhell",
          "match": "^\\s*(~)\\s+(\\w+):\\s*(.+)\\s*$",
          "captures": {
            "1": { "name": "keyword.operator.effect.nhell" },
            "2": { "name": "variable.parameter.nhell" },
            "3": { "name": "constant.other.value.nhell" }
          }
        },
        {
          "name": "meta.effect.numeric.nhell",
          "match": "^\\s*(~)\\s+(\\w+)\\s+([+-]?\\d+)\\s*$",
          "captures": {
            "1": { "name": "keyword.operator.effect.nhell" },
            "2": { "name": "variable.parameter.nhell" },
            "3": { "name": "constant.numeric.nhell" }
          }
        },
        {
          "name": "meta.effect.boolean.nhell",
          "match": "^\\s*(~)\\s+(\\w+)\\s+(true|false)\\s*$",
          "captures": {
            "1": { "name": "keyword.operator.effect.nhell" },
            "2": { "name": "variable.parameter.nhell" },
            "3": { "name": "constant.language.boolean.nhell" }
          }
        }
      ]
    },
    "flow-control": {
      "patterns": [
        {
          "name": "meta.flow.goto.nhell",
          "match": "(->)\\s+(\\w+)",
          "captures": {
            "1": { "name": "keyword.operator.arrow.nhell" },
            "2": { "name": "entity.name.label.nhell" }
          }
        },
        {
          "name": "keyword.control.nhell",
          "match": "\\b(END)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.nhell",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "name": "comment.block.nhell",
              "match": "."
            }
          ]
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "constant.numeric.nhell",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.language.boolean.nhell",
          "match": "\\b(true|false)\\b"
        }
      ]
    }
  }
}
